# Import the required module for text  
# to speech conversion 
from gtts import gTTS 
from playsound import playsound
import time
import pyaudio
import wave
import speech_recognition as sr0
  
# This module is imported so that we can  
# play the converted audio 
import os 
  
# The text that you want to convert to audio 
mytext = ["Welcome to INTERVIEW BOT!","First question from our side what is java","Is multiple inheritance supported in java","what are classes and objects in java","HOW java is different from other languages"]
  
# Language in which you want to convert 
language = 'en'


def audiototext(audio):
    r = sr.Recognizer()
    with sr.AudioFile(audio) as source:
        audio = r.record(source)
        print ('Done!') 
    text = r.recognize_google(audio)
    
    return text
    
lst1=["good","better than others","uses classes and objects","objects","classes","better","android development","android"]
lst2=["no","ambiguity","not supported","not"]
lst3=["classes are blocks","blocks","structure","data structure"," instance","reference"]
lst4=["oops","object oriented","various uses"]
lstans=[lst1,lst2,lst3,lst4]
def anscheck(ans,count):
    success=0
    for i in lstans[count]:
        if(i in ans):
            success+=1
    print(success)     
    
def recordaudio1(i):
    
    CHUNK = 1024 
    FORMAT = pyaudio.paInt16 #paInt8
    CHANNELS = 2 
    RATE = 44100 #sample rate
    RECORD_SECONDS = 10
    str="answered"+i+".wav"
    WAVE_OUTPUT_FILENAME =str

    p = pyaudio.PyAudio()

    stream = p.open(format=FORMAT,
                channels=CHANNELS,
                rate=RATE,
                input=True,
                frames_per_buffer=CHUNK) #buffer

    print("* recording")
 
    frames = []

    for i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
        data = stream.read(CHUNK)
        frames.append(data) # 2 bytes(16 bits) per channel

    print("* done recording")

    stream.stop_stream()
    stream.close()
    p.terminate()

    wf = wave.open(WAVE_OUTPUT_FILENAME, 'wb')
    wf.setnchannels(CHANNELS)
    wf.setsampwidth(p.get_sample_size(FORMAT))
    wf.setframerate(RATE)
    wf.writeframes(b''.join(frames))
    wf.close()
    
    return str

  
# Passing the text and language to the engine,  
# here we have marked slow=False. Which tells  
# the module that the converted audio should  
# have a high speed 
count=0
for i in mytext:
    myobj = gTTS(text=i, lang=language, slow=False) 
     # Saving the converted audio in a mp3 file named 
     # welcome 
    str="welcome"+i+".mp3"
    myobj.save(str) 
     # Playing the converted file 
    

    playsound(str)    
    # os.system("welcome.mp3")
    if(i!="Welcome to INTERVIEW BOT!"):
        s=recordaudio1(i)
        ans=audiototext(s)
        print(ans)
        anscheck(ans,count)
        count+=1
    
       
